package org.sv.ues.igf.entidades;

// Generated 10-25-2014 10:33:59 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cliente generated by hbm2java
 */
@Entity
@Table(name = "cliente", catalog = "clave1")
public class Cliente implements java.io.Serializable {

	private Integer idcliente;
	private Tipocliente tipocliente;
	private String nombClient;
	private String apellidoClient;
	private String direccion;
	private String telefono;
	private Date fechaNacimiento;
	private String email;
	private Set<Transaccion> transaccions = new HashSet<Transaccion>(0);
	private Set<Clientetarjetaestado> clientetarjetaestados = new HashSet<Clientetarjetaestado>(
			0);
	private Set<Clientetarjeta> clientetarjetas = new HashSet<Clientetarjeta>(0);

	public Cliente() {
	}

	public Cliente(Tipocliente tipocliente, String nombClient,
			String apellidoClient, String direccion, String telefono,
			Date fechaNacimiento, String email, Set<Transaccion> transaccions,
			Set<Clientetarjetaestado> clientetarjetaestados,
			Set<Clientetarjeta> clientetarjetas) {
		this.tipocliente = tipocliente;
		this.nombClient = nombClient;
		this.apellidoClient = apellidoClient;
		this.direccion = direccion;
		this.telefono = telefono;
		this.fechaNacimiento = fechaNacimiento;
		this.email = email;
		this.transaccions = transaccions;
		this.clientetarjetaestados = clientetarjetaestados;
		this.clientetarjetas = clientetarjetas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "idcliente", unique = true, nullable = false)
	public Integer getIdcliente() {
		return this.idcliente;
	}

	public void setIdcliente(Integer idcliente) {
		this.idcliente = idcliente;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtipocliente")
	public Tipocliente getTipocliente() {
		return this.tipocliente;
	}

	public void setTipocliente(Tipocliente tipocliente) {
		this.tipocliente = tipocliente;
	}

	@Column(name = "nomb_client", length = 45)
	public String getNombClient() {
		return this.nombClient;
	}

	public void setNombClient(String nombClient) {
		this.nombClient = nombClient;
	}

	@Column(name = "apellido_client", length = 45)
	public String getApellidoClient() {
		return this.apellidoClient;
	}

	public void setApellidoClient(String apellidoClient) {
		this.apellidoClient = apellidoClient;
	}

	@Column(name = "direccion", length = 100)
	public String getDireccion() {
		return this.direccion;
	}

	public void setDireccion(String direccion) {
		this.direccion = direccion;
	}

	@Column(name = "telefono", length = 9)
	public String getTelefono() {
		return this.telefono;
	}

	public void setTelefono(String telefono) {
		this.telefono = telefono;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "fecha_nacimiento", length = 10)
	public Date getFechaNacimiento() {
		return this.fechaNacimiento;
	}

	public void setFechaNacimiento(Date fechaNacimiento) {
		this.fechaNacimiento = fechaNacimiento;
	}

	@Column(name = "email", length = 25)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
	public Set<Transaccion> getTransaccions() {
		return this.transaccions;
	}

	public void setTransaccions(Set<Transaccion> transaccions) {
		this.transaccions = transaccions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
	public Set<Clientetarjetaestado> getClientetarjetaestados() {
		return this.clientetarjetaestados;
	}

	public void setClientetarjetaestados(
			Set<Clientetarjetaestado> clientetarjetaestados) {
		this.clientetarjetaestados = clientetarjetaestados;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cliente")
	public Set<Clientetarjeta> getClientetarjetas() {
		return this.clientetarjetas;
	}

	public void setClientetarjetas(Set<Clientetarjeta> clientetarjetas) {
		this.clientetarjetas = clientetarjetas;
	}

}
